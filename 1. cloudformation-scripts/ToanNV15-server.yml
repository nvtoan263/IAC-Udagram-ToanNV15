Description: >
  Trainee: ToanNV15
  This is final cloudformation script to build an webapp as required in "Infrastructure As Code"
  This script create 2 servers in each private subnet, load balancer
Parameters:
    EnvironmentName:
        Description: Environment name IAC-Udagram-ToanNV15
        Type: String
    AMIforServer:
        Description: AMI for server - this is hardcoded in parameter file. ami-007855ac798b5175e
        Type: String
    KeyPairforServer:
        Description: Key pair for server - this is hardcoded in parameter file. VocareumKey2
        Type: String        
Resources:
###################### Start of Jumpbox creation ######################            
# Trying to create IAM role to create EC2 instance as jumpbox
# IAM Role to allow EC2 Session Manager to access our server
  RoleForSSMAccess: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
# Instance Profile
  JumpBoxServerInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref RoleForSSMAccess
#Jumpbox Security group
  JumBoxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH as ingress and keep all ports to internet access
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
#Jumpbox instance
  JumpBoxInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIforServer
      KeyName: !Ref KeyPairforServer
      InstanceType: t2.micro
      IamInstanceProfile: !Ref JumpBoxServerInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref JumBoxSecurityGroup
          SubnetId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-PUB1-SN" #Place Jumpbox in Public subnet 1 group
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
###################### End of Jumpbox creation ######################
   
#Webserver security group
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} WebServerSecGroup        
#Load Balancer security group
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
         
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          echo "IAC Udagram - ToanNV15 " > index.html
          systemctl restart apache2.service
      ImageId: !Ref AMIforServer
      KeyName: !Ref KeyPairforServer
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t3.micro
      #IamInstanceProfile: !ImportValue OutputProfileInstance
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
#Webapp target group          
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"            
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
     
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 80
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1      
Outputs:
# Add "http://"" to DNS name of Loadbalance
  LoadBalancer:
    Description: A reference to the created WebApp LoadBalancer
    Value: !Join [ "", [ 'http://', !GetAtt WebAppLB.DNSName ]]
    Export:
      Name: LoadBalancerURL   