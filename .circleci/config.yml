version: 2.1
executors:
  my-executor:
    docker:
      - image: circleci/node:latest
    working_directory: /tmp
commands:
  boss-greeting:
    description: "I am trying to try command to reuse some of my code"    
    parameters:
      first-name:
        default: "toan"
        type: string
      age:
        default: 30
        type: integer
    steps:
      - run: echo "Hello <<parameters.first-name>>. You are <<parameters.age>> rights?"
  destroy_environment:
    description: "Delete created infrastructure if fail to ping"
    steps:
      - run:
          name: "Delete infrastructure"
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  writting:
    executor: my-executor
    steps:
      - boss-greeting:
          first-name: "Toan"
          age: 30
      - run: mkdir -p workspace
      - run: echo "Hi Toan, you are being father :)" > workspace/echo-output
      - persist_to_workspace:
          root: workspace
          paths:
            - echo-output
  reading:
    executor: my-executor
    steps:
      - boss-greeting:
          first-name: "Ngan"
          age: 25    
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/echo-output
  misc:
    executor: my-executor
    steps:
      - run: |
          if [[ 'cat /tmp/workspace/echo-output' == "some testing code" ]]; then
            echo "contents is expected";
          else
            echo "contents is something else"; exit 0
          fi
      - run:
          name: shout out on some failure
          command: echo "Hi Toan, now you see how on_fail works right?"
          when: on_fail
  create_infrastructure:
    docker:
      - image: amazon/aws-cli 
    steps:
      - checkout
      - run:
          name: Install JQ for parsing json file
          command: |
            yum install -y jq;
            yum install -y tar;
            yum install -y gzip
      - run: | 
          aws cloudformation deploy --template-file template.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1
      - run: |
          stack_status="CREATE_IN_PROGRESS"
          while [ "$stack_status" != "CREATE_COMPLETE" ]; do
            stack_status=$(aws cloudformation describe-stacks --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} | jq -r '.Stacks[0].StackStatus')
            if [ "$stack_status" == "ROLLBACK_COMPLETE" ]; then
              echo "CloudFormation stack creation failed."
              exit 1
            fi
            sleep 5
          done
          echo "CREATE_COMPLETE" > output
      - persist_to_workspace:
          root: .
          paths:
            - output
  configure_infrastructure:
    docker:
      - image: python:3.8
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["ee:47:ec:7f:49:b2:c8:0e:73:71:79:6e:bc:98:85:c6"]
      - run:
          name: Install Ansible
          command: | 
            pip install ansible
      - run:
          name: Run play book and configure server
          command: | 
            ansible-playbook -i inventory main.yml
  smoke-test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
          paths:
            - output
      - run: |
          if [[ 'cat output' == "CREATE_COMPLETE" ]]; then
            echo "Infrastructure created successfully";
          else
            echo "Infrastructure was not created"; exit 1
          fi      
      - destroy_environment
workflows:
  create-infra:
    jobs:
      - create_infrastructure
      - smoke-test:
          requires:
          - create_infrastructure
#  install-ansible-start-server:
#    jobs:
#      - configure_infrastructure
#      - writting
#      - reading:
#          requires:
#          - writting
#      - misc
